name: CI

on:
  pull_request:
    branches: ["main", "develop" ]


jobs:
  laravel-tests:

    runs-on: ubuntu-latest  # Define o sistema operacional para Ubuntu na versão mais recente

    steps:
    - name: Checkout código  # Passo para fazer checkout do código do repositório
      uses: actions/checkout@v2  # Usar a ação oficial de checkout do GitHub

    - name: Setup PHP  # Passo para configurar a versão do PHP
      uses: shivammathur/setup-php@v2  # Usar a ação para configurar a versão do PHP
      with:
        php-version: '8.2'  # Especificar a versão do PHP que deseja usar

    - name: Copy .env  # Passo para copiar o arquivo .env se não existir
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Dependencies  # Passo para instalar as dependências do Composer
      run: composer install

    - name: Generate key  # Passo para gerar a chave de aplicação do Laravel
      run: php artisan key:generate

    - name: Directory Permissions  # Passo para configurar permissões de diretórios
      run: chmod -R 777 storage bootstrap/cache

    - name: Create Database  # Passo para criar o banco de dados SQLite
      run: |
        mkdir -p database
        touch database/database.sqlite
        
    - name: Installing Package.json  # Passo para instalar dependências do Node.js
      run: npm install

    - name: Build Assets  # Passo para construir os ativos usando npm
      run: npm run build

    - name: Execute tests (Unit and Feature tests) via PEST  # Passo para executar testes usando PEST
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan test --parallel

    - name: Execute Larastan  # Passo para executar análise estática com Larastan
      run: vendor/bin/phpstan analyse

    - name: Execute Laravel Pint  # Passo para executar testes com Laravel Pint
      run: vendor/bin/pint --test
